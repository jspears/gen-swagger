/**
 * Uber API
 * Move your app forward with the Uber API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import java.math.BigDecimal;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class PriceEstimate  {
  
  @SerializedName("product_id")
  private String productId = null;
  @SerializedName("currency_code")
  private String currencyCode = null;
  @SerializedName("display_name")
  private String displayName = null;
  @SerializedName("estimate")
  private String estimate = null;
  @SerializedName("low_estimate")
  private BigDecimal lowEstimate = null;
  @SerializedName("high_estimate")
  private BigDecimal highEstimate = null;
  @SerializedName("surge_multiplier")
  private BigDecimal surgeMultiplier = null;

  /**
   * Unique identifier representing a specific product for a given latitude &amp; longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles
   **/
  @ApiModelProperty(value = "Unique identifier representing a specific product for a given latitude &amp; longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles")
  public String getProductId() {
    return productId;
  }
  public void setProductId(String productId) {
    this.productId = productId;
  }

  /**
   * [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code.
   **/
  @ApiModelProperty(value = "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code.")
  public String getCurrencyCode() {
    return currencyCode;
  }
  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  /**
   * Display name of product.
   **/
  @ApiModelProperty(value = "Display name of product.")
  public String getDisplayName() {
    return displayName;
  }
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  /**
   * Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or &quot;Metered&quot; for TAXI.
   **/
  @ApiModelProperty(value = "Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or &quot;Metered&quot; for TAXI.")
  public String getEstimate() {
    return estimate;
  }
  public void setEstimate(String estimate) {
    this.estimate = estimate;
  }

  /**
   * Lower bound of the estimated price.
   **/
  @ApiModelProperty(value = "Lower bound of the estimated price.")
  public BigDecimal getLowEstimate() {
    return lowEstimate;
  }
  public void setLowEstimate(BigDecimal lowEstimate) {
    this.lowEstimate = lowEstimate;
  }

  /**
   * Upper bound of the estimated price.
   **/
  @ApiModelProperty(value = "Upper bound of the estimated price.")
  public BigDecimal getHighEstimate() {
    return highEstimate;
  }
  public void setHighEstimate(BigDecimal highEstimate) {
    this.highEstimate = highEstimate;
  }

  /**
   * Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier.
   **/
  @ApiModelProperty(value = "Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier.")
  public BigDecimal getSurgeMultiplier() {
    return surgeMultiplier;
  }
  public void setSurgeMultiplier(BigDecimal surgeMultiplier) {
    this.surgeMultiplier = surgeMultiplier;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PriceEstimate priceEstimate = (PriceEstimate) o;
    return (productId == null ? priceEstimate.productId == null : productId.equals(priceEstimate.productId)) &&
        (currencyCode == null ? priceEstimate.currencyCode == null : currencyCode.equals(priceEstimate.currencyCode)) &&
        (displayName == null ? priceEstimate.displayName == null : displayName.equals(priceEstimate.displayName)) &&
        (estimate == null ? priceEstimate.estimate == null : estimate.equals(priceEstimate.estimate)) &&
        (lowEstimate == null ? priceEstimate.lowEstimate == null : lowEstimate.equals(priceEstimate.lowEstimate)) &&
        (highEstimate == null ? priceEstimate.highEstimate == null : highEstimate.equals(priceEstimate.highEstimate)) &&
        (surgeMultiplier == null ? priceEstimate.surgeMultiplier == null : surgeMultiplier.equals(priceEstimate.surgeMultiplier));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (productId == null ? 0: productId.hashCode());
    result = 31 * result + (currencyCode == null ? 0: currencyCode.hashCode());
    result = 31 * result + (displayName == null ? 0: displayName.hashCode());
    result = 31 * result + (estimate == null ? 0: estimate.hashCode());
    result = 31 * result + (lowEstimate == null ? 0: lowEstimate.hashCode());
    result = 31 * result + (highEstimate == null ? 0: highEstimate.hashCode());
    result = 31 * result + (surgeMultiplier == null ? 0: surgeMultiplier.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PriceEstimate {\n");
    
    sb.append("  productId: ").append(productId).append("\n");
    sb.append("  currencyCode: ").append(currencyCode).append("\n");
    sb.append("  displayName: ").append(displayName).append("\n");
    sb.append("  estimate: ").append(estimate).append("\n");
    sb.append("  lowEstimate: ").append(lowEstimate).append("\n");
    sb.append("  highEstimate: ").append(highEstimate).append("\n");
    sb.append("  surgeMultiplier: ").append(surgeMultiplier).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
